#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Twist
from turtlesim.msg import Pose

def pose_callback(msg):
    rospy.loginfo(msg.x)

def main():

       	
	rospy.init_node('node_turtle_circle', anonymous=True)
	velocity_publisher = rospy.Publisher('/turtle1/cmd_vel', Twist, 	queue_size=10)
	vel_msg = Twist()
	vel_msg.linear.x=5
	vel_msg.angular.z=5
	rate = rospy.Rate(10)
	rospy.Subscriber("/turtle1/pose", Pose, pose_callback)
	while not rospy.is_shutdown():
		velocity_publisher.publish(vel_msg)
		

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass

